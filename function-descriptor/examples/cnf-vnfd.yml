## Copyright (c) 2015 SONATA-NFV, 2017 5GTANGO
## ALL RIGHTS RESERVED.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## Neither the name of the SONATA-NFV, 5GTANGO
## nor the names of its contributors may be used to endorse or promote
## products derived from this software without specific prior written
## permission.
##
## This work has been performed in the framework of the SONATA project,
## funded by the European Commission under Grant number 671517 through
## the Horizon 2020 and 5G-PPP programmes. The authors would like to
## acknowledge the contributions of their colleagues of the SONATA
## partner consortium (www.sonata-nfv.eu).
##
## This work has been performed in the framework of the 5GTANGO project,
## funded by the European Commission under Grant number 761493 through
## the Horizon 2020 and 5G-PPP programmes. The authors would like to
## acknowledge the contributions of their colleagues of the 5GTANGO
## partner consortium (www.5gtango.eu).

#
# Example of a cloud native network function
#


---
descriptor_schema: "https://raw.githubusercontent.com/sonata-nfv/tng-schema/master/function-descriptor/vnfd-schema.yml"

vendor: "eu.5gtango"
name: "cloudnative-vnf"
version: "0.9"
author: "5GTANGO Developer"
description: "A clound native VNF example."


# cloud native deployment units inside the VNF
cloudnative_deployment_units:
  - id: "cndu01"
    image: some-docker-hub/nginx:latest
    connection_points:
      - id: "int-http"
        port: 8080
        publish: {80: 8080}      # directly publish port of CDU (mostly for debugging, not needed for K8s)
      - id: "int-https"
        port: 443
    parameters:                 # (optional)
        env:                    # In case of set environment variables to the containers
          key1: valueA
          key2: valueB
        k8s_deployment:
          key1: value2
        k8s_service:
          keyA: valueB
    monitoring_parameters:
      - name: "foo"
        unit: "Mbps"
      
# VNF connection points to the outside world
connection_points:
  - id: "http"
    interface: "ipv4"
    type: "serviceendpoint"
    port: 80
  - id: "https"
    interface: "ipv4"
    type: "serviceendpoint"
    port: 443
  

# CNFs only use E-Tree links to map external ports to internal ports
virtual_links:
  - id: "http-link"
    connectivity_type: "E-Tree"
    connection_points_reference:
      - "http"
      - "cdu01:int-http"
  - id: "https-link"
    connectivity_type: "E-Tree"
    connection_points_reference:
      - "https"
      - "cdu01:int-https"
